{"ast":null,"code":"var _jsxFileName = \"/Users/lewisrodriguez/Projects/react_crash_todo/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TodoItem(props) {\n  /*     function getStyle() {\n          return {\n              background: '#f4f4f4',\n              padding: '10px',\n              borderBottom: '1px #ccc dotted',\n              textDecoration: props.todo.completed ? 'line-through' : 'none'\n          }\n      }; */\n  const getStyle = () => {\n    return {\n      background: '#f4f4f4',\n      padding: '10px',\n      borderBottom: '1px #ccc dotted',\n      textDecoration: props.todo.completed ? 'line-through' : 'none'\n    };\n  }; //Destructuring\n\n\n  const {\n    id,\n    title\n  } = props.todo; //End Destructuring\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: getStyle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: props.markComplete.bind(this, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), title, /*#__PURE__*/React.createElement(\"button\", {\n    onClikc: props.deleteTodo.bind(this, id),\n    style: btnStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"X\")));\n} //PropTypes\n\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nconst btnStyle = {\n  background: '#FF0000',\n  color: '#fff',\n  border: 'none',\n  borderRadius: '50%',\n  padding: '5px 9px',\n  cursor: 'pointer',\n  float: 'right'\n};\nexport default TodoItem;","map":{"version":3,"sources":["/Users/lewisrodriguez/Projects/react_crash_todo/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","props","getStyle","background","padding","borderBottom","textDecoration","todo","completed","id","title","markComplete","bind","deleteTodo","btnStyle","propTypes","object","isRequired","color","border","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACzB;;;;;;;;AASI,QAAMC,QAAQ,GAAG,MAAM;AACnB,WAAO;AACHC,MAAAA,UAAU,EAAE,SADT;AAEHC,MAAAA,OAAO,EAAE,MAFN;AAGHC,MAAAA,YAAY,EAAE,iBAHX;AAIHC,MAAAA,cAAc,EAAEL,KAAK,CAACM,IAAN,CAAWC,SAAX,GAAuB,cAAvB,GAAwC;AAJrD,KAAP;AAMH,GAPD,CAVqB,CAmBrB;;;AACA,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAgBT,KAAK,CAACM,IAA5B,CApBqB,CAqBrB;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAGL,QAAQ,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAGD,KAAK,CAACU,YAAN,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8BH,EAA9B,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEMC,KAFN,eAGI;AAAQ,IAAA,OAAO,EAAGT,KAAK,CAACY,UAAN,CAAiBD,IAAjB,CAAsB,IAAtB,EAA4BH,EAA5B,CAAlB;AAAmD,IAAA,KAAK,EAAIK,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CADJ,CADJ;AASH,C,CAED;;;AACAd,QAAQ,CAACe,SAAT,GAAqB;AACjBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBC;AADN,CAArB;AAIA,MAAMH,QAAQ,GAAG;AACbX,EAAAA,UAAU,EAAE,SADC;AAEbe,EAAAA,KAAK,EAAE,MAFM;AAGbC,EAAAA,MAAM,EAAE,MAHK;AAIbC,EAAAA,YAAY,EAAE,KAJD;AAKbhB,EAAAA,OAAO,EAAE,SALI;AAMbiB,EAAAA,MAAM,EAAE,SANK;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAjB;AAUA,eAAetB,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\n\nfunction TodoItem(props) {\n/*     function getStyle() {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: props.todo.completed ? 'line-through' : 'none'\n        }\n    }; */\n\n    const getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: props.todo.completed ? 'line-through' : 'none'\n        }\n    };\n\n    //Destructuring\n    const { id, title } = props.todo;\n    //End Destructuring\n\n    return(\n        <div style={ getStyle() }> {/* For inline styling use double curly braces */}\n            <p>\n                <input type=\"checkbox\" onChange={ props.markComplete.bind(this, id) }></input>\n                { title }\n                <button onClikc={ props.deleteTodo.bind(this, id)} style= { btnStyle }>X</button>\n            </p>\n        </div>\n    );\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nconst btnStyle = {\n    background: '#FF0000',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '50%',\n    padding: '5px 9px',\n    cursor: 'pointer',\n    float: 'right'\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}